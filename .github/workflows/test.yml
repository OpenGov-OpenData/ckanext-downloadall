name: Tests
on: [pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install requirements
        run: |
          pip install flake8 pycodestyle pylint bandit
          pip install -e .
      - name: Check syntax
        run: flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics --exclude ckan
      - name: Run flake8
        run: flake8 . --count --max-line-length=127 --statistics --exclude ckan
      - name: Run pylint
        run: pylint --output-format=colorized ckanext/downloadall
      - name: Run bandit
        run: bandit -s B101  -r ./ -f screen

  test:
    needs: lint
    strategy:
      matrix:
        ckan-version: [2.9]
      fail-fast: false

    name: CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    container:
      image: openknowledge/ckan-dev:${{ matrix.ckan-version }}
    services:
      solr:
        image: ckan/ckan-solr:${{ matrix.ckan-version }}
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
          image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
    - uses: actions/checkout@v2
    - name: Install requirements
      run: |
        pip install -r dev-requirements.txt
        pip install -e .
        # Replace default path to CKAN core config file with the one on the container
        sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini
    - name: Setup extension
      run: |
        ckan -c test.ini db init
    - name: Run tests
      run: pytest --ckan-ini=test.ini --cov=ckanext.downloadall --cov-fail-under=80 --disable-warnings -vvv ckanext/downloadall/tests
    - name: Install Java
      run: sudo apt-get -y install openjdk-17-jre
    - name: Install SonarQube Scanner
      run: pip install pysonar-scanner
    - name: Run SonarQube analysis
      run: |
        pysonar-scanner \
          -Dsonar.projectKey='ckanext-downloadall' \
          -Dsonar.sources=. \
          -Dsonar.application='open-data' \
          -Dsonar.host.url=${{ secrets.SONAR_EXTERNAL_URL }} \
          -Dsonar.login=${{ secrets.SONAR_API_TOKEN }}
